{"name":"oppo remote","type":"virtual_device","properties":{"deviceIcon":0,"currentIcon":"0","log":"","logTemp":"","mainLoop":"","ui.Label1.value":"","ui.Label2.value":"","visible":"true","rows":[{"type":"button","elements":[{"id":1,"lua":true,"waitForResponse":false,"caption":"⌽","name":"Button71","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'POWER'\ncmdCode = 'POW'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":2,"lua":true,"waitForResponse":false,"caption":"⏏","name":"Button72","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'OPEN'\ncmdCode = 'EJT'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":3,"lua":true,"waitForResponse":false,"caption":"HOME","name":"Button81","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_PARM_CMD = 'gOppo_D_PCmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'HOME'\ncmdCode = 'HOM'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\n--Trace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":4,"lua":true,"waitForResponse":false,"caption":"SETUP","name":"Button82","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_PARM_CMD = 'gOppo_D_PCmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'SETUP'\ncmdCode = 'SET'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\n--Trace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":5,"lua":true,"waitForResponse":false,"caption":"▲","name":"Button11","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'Up_Arrow'\ncmdCode = 'NUP'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":true}]},{"type":"button","elements":[{"id":6,"lua":true,"waitForResponse":false,"caption":"◀","name":"Button21","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'Left_Arrow'\ncmdCode = 'NLT'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":7,"lua":true,"waitForResponse":false,"caption":"Enter","name":"Button22","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'ENTER'\ncmdCode = 'SEL'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":8,"lua":true,"waitForResponse":false,"caption":"►","name":"Button23","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'Right_Arrow'\ncmdCode = 'NRT'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":9,"lua":true,"waitForResponse":false,"caption":"▼","name":"Button31","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'Down_Arrow'\ncmdCode = 'NDN'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"label","elements":[{"id":10,"lua":false,"waitForResponse":false,"caption":"音量","name":"Label1","favourite":false,"main":false}]},{"type":"button","elements":[{"id":11,"lua":true,"waitForResponse":false,"caption":"+","name":"Button41","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'VOL+'\ncmdCode = 'VUP'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":12,"lua":true,"waitForResponse":false,"caption":"Mute","name":"Button42","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'MUTE'\ncmdCode = 'MUT'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":13,"lua":true,"waitForResponse":false,"caption":"-","name":"Button43","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'VOL-'\ncmdCode = 'VDN'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"label","elements":[{"id":14,"lua":false,"waitForResponse":false,"caption":"播放","name":"Label2","favourite":false,"main":false}]},{"type":"button","elements":[{"id":15,"lua":true,"waitForResponse":false,"caption":"■","name":"Button51","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'STOP'\ncmdCode = 'STP'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":16,"lua":true,"waitForResponse":false,"caption":"►","name":"Button52","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'PLAY'\ncmdCode = 'PLA'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":17,"lua":true,"waitForResponse":false,"caption":"Pause","name":"Button53","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'PAUSE'\ncmdCode = 'PAU'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":18,"lua":true,"waitForResponse":false,"caption":"⏮","name":"Button61","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'PREV'\ncmdCode = 'PRE'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":19,"lua":true,"waitForResponse":false,"caption":"⏪","name":"Button62","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_PARM_CMD = 'gOppo_D_PCmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'REV'\ncmdCode = 'REV'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\n--Trace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":20,"lua":true,"waitForResponse":false,"caption":"⏩","name":"Button63","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'FWD'\ncmdCode = 'FWD'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":21,"lua":true,"waitForResponse":false,"caption":"⏭","name":"Button64","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'NEXT'\ncmdCode = 'NXT'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"button","elements":[{"id":22,"lua":true,"waitForResponse":false,"caption":"POWER ON","name":"Button91","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'POWER_ON'\ncmdCode = 'POWON'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":23,"lua":true,"waitForResponse":false,"caption":"POWER OFF","name":"Button92","empty":false,"msg":"--[[\n    @Global Variable: \n        gOppo_D_Cmd: command to be sent for RPI on OPPO\n        gOppo_D_State: true (activate) or false (deactivate)\n        gOppo_D_Meta: json data storage for OPPO devices status\n        gOppo_D_Stop: true (stop daemon) or false (daemon keep going)\n        gLu_WD_Stop: true (stop watchdog) or false (watch keep going)\n--]]\n\n-- global variable in used\nG_VAR_NAME_META = 'gOppo_D_Meta'\nG_VAR_NAME_STATE = 'gOppo_D_State'\nG_VAR_NAME_CMD = 'gOppo_D_Cmd'\nG_VAR_NAME_STOP = 'gOppo_D_Stop'\nG_VAR_NAME_WD_STOP = 'gOppo_WD_Stop'     -- Watch Dog Stop Flag \n\nVDEV_NAME = 'oppo controller'\n\n-- oppo remote key command code\nbtnName = 'POWER_OFF'\ncmdCode = 'POWOFF'\ncmdParam = ''\nif btnParam ~= '' then\n    btnCmd = '#' .. cmdCode .. ' ' .. cmdParam\nelse\n    btnCmd = '#' .. cmdCode\nend\n    \nbtnCmdDescription = 'button ' .. btnName ..' press'\n\n-- debug function declare\n_DEBUG = 10\n_INFO = 20\n_WARNING = 30\n_ERROR = 40\nlogLevel = _DEBUG\n\nfunction Trace( _text , _weight )\n    _weight = _weight or _DEBUG\n  \tif _weight == _INFO then\n    \t_color = 'white'\n    elseif _weight >= _WARNING then\n    \t_color = 'red'\n    else\n    \t_color = \"gray\"\n    end\n    if _weight >= logLevel then\n        fibaro:debug( '<span style=\"color:' .. _color .. '\">' .. tostring( _text ) .. '</span><p>' )\n    end\nend\n\nTrace(btnCmdDescription, _INFO)\n\n-- variable initial\nlocal selfID = fibaro:getSelfId()\nlocal ipAddress = fibaro:getValue( selfID , \"IPAddress\" )\nlocal tcpPort = fibaro:getValue( selfID , \"TCPPort\" )\nTrace('Socket Server IP: ' .. ipAddress .. ' listen port: ' .. tcpPort)\n\nlocal wait_cmd = fibaro:getGlobal(G_VAR_NAME_CMD)\n-- check if cmd wait\nif wait_cmd ~= '' and wait_cmd ~= nil then\n    Trace('wait command exist: ' .. wait_cmd, _WARNING)\n    fibaro:log('busy, try later')\nelse\n    fibaro:setGlobal(G_VAR_NAME_CMD,btnCmd)\n    Trace('set cmd: ' .. btnCmd)\n    fibaro:log(btnCmdDescription)\nend\n","buttonIcon":0,"favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}